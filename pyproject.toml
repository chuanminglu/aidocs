[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--strict-markers", 
    "--strict-config",
    "--cov=src/md2doc",
    "--cov-report=term-missing",
    "--cov-report=html:tests/coverage_html",
    "--cov-report=xml:tests/coverage.xml",
    "--cov-fail-under=80"
]
testpaths = ["tests"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "slow: Slow tests that take more time"
]

[tool.coverage.run]
source = ["src/md2doc"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/conftest.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

[tool.poetry]
name = "aidocs"
version = "0.1.0"
description = "AI文档处理和转换工具 - Markdown到Word文档转换器"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.9"

[tool.poetry.group.gui.dependencies]
PyQt6 = "^6.6.1"
PyQt6-Qt6 = "^6.6.1"
PyQt6-sip = "^13.6.0"

[tool.poetry.group.web.dependencies]
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"

[tool.poetry.group.database.dependencies]
sqlalchemy = "^2.0.23"
alembic = "^1.13.1"
psycopg2-binary = "^2.9.9"
aiosqlite = "^0.19.0"

[tool.poetry.group.ai.dependencies]
httpx = "^0.25.2"
openai = "^1.3.7"
tiktoken = "^0.5.2"

[tool.poetry.group.search.dependencies]
whoosh = "^2.7.4"
jieba = "^0.42.1"

[tool.poetry.group.utils.dependencies]
python-dotenv = "^1.0.0"
PyYAML = "^6.0.1"
Markdown = "^3.5.1"
python-dateutil = "^2.8.2"
pathlib = "^1.0.1"
loguru = "^0.7.2"

[tool.poetry.group.docs.dependencies]
docx2txt = "^0.8"
Pillow = "^10.1.0"
lxml = "4.9.3"
python-magic = "^0.4.27"
python-docx = "^1.2.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
black = "^23.11.0"
isort = "^5.12.0"
flake8 = "^6.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
